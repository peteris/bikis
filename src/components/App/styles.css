/* Do not write any CSS in here, add it to the appropriate module or make a new one */
@charset 'UTF-8';

/* Modules */
@import 'normalize.css/normalize.css';
@import 'basscss';
@import 'basscss-responsive-padding';
@import 'basscss-responsive-margin';

/* Global Typography */
@import './typography.css';

/* Helpers */
@import './helpers.css';

/* Constants */
@import './../../constants.css';

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*, *::before, *::after {
  box-sizing: inherit;
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}

body {
  font-family: Georgia, 'Times New Roman', serif;
  color: var(--text-color);
  line-height: 1.9em;
  background-color: var(--background-color);
}

body.js-fonts-loaded {
  font-family: 'Vollkorn', Georgia, serif;
}

.cover {
  background-color: var(--text-color);
}

.app {
  display: none;
}

html {
  cursor: url(./cursor.png), auto;
}

body.js-fonts-loaded .app {
  display: block;
}

.animate-in .app {
  animation: fade-in 500ms 0ms var(--ease-out-cubic) both;
}

body.js-fonts-loaded .cover {
  animation: fade-out 500ms 200ms var(--ease-out-cubic) both;
}

a,
.toggle {
  color: var(--text-color);
  text-decoration: none;
  position: relative;
  display: inline-block;
  font-family: 'Karla';
}

a:after,
.toggle:after,
a:before {
  content: '';
  display: block;
  border-bottom: 6px solid var(--text-color);
  position: absolute;
  top: 1.2em;
  left: 0;
  right: 0;
  opacity: 0.2;
  transition: opacity 300ms var(--ease-out-cubic);
}

a:before {
  transform: scaleX(0);
  opacity: 1;
  transition: transform 300ms var(--ease-out-cubic);
}

.link:hover {
  transform: skewY(-10deg);
}

a:hover:before {
  transform: scaleX(1);
}

a.symbol {
  display: inline-block;
  position: static;
  line-height: 0.5em;
}

a.symbol:after {
  display: none;
}

.h3 {
  font-weight: 100;
}

#app {
  height: 100%;
}

.abs-center {
  top: 50vh;
  left: 50vw;
  transform: translate3d(-50%,-50%,0);
}

/* Animations */
@keyframes fade-in {
  0% {
    opacity: 0;
    transform: scale(0.97);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
